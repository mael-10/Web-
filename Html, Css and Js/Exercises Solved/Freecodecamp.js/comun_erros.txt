1 - Quando tentamos utilizar .value em elementos que não é input é retornado .value. Se quer pegar o valor de um elemento que não seja input tem que user innerText ou .textContent. Ex: 

let valueNumber = number.innerText;

.value só se usa em inputs

2- Não é necesário colocar um return em uma função ao menos que queira retornar valores e ou fazer interrupção prematura

3- Para eu usar o addEventListner passando um paramêtro, é preciso usar uma função anônima para não ser chamada no mesmo instante, mas somente ao clicar. Ex:

for(let i = 0; i <= 9; i++){
    allNumbers[i].addEventListener('click', function() {
        getIdNumber(allNumbers[i]);
    });
}

4- Iterar mais elementos que o array tem pode resultar em 'cannot read property of undifined erros'

5- Tem que ficar atento com .length, pois ele conta a partir de 1 um e não de 0.

6- Quando estiver tendo problemas de renderização quando o JS, para desbugar vc pode usar o 

document.addEventListener('DOMContentLoaded', () => {})

Isso vai dizer que só vai executar o código js quando todo o html e css estiver lido (isso pode ajudar quando tiver problemas de renderização)

7- O eval() tem que ser tomado cuidado ao seu uso, pois pode ter vunerabilidades especialmente usando com entrada de usuário. 
Nesse contexto ele pode ser usado para transformar uma string matemática em um resultado de uma operação:

eval("21+41") //62

8- Um dos maiores problemas ao fazer uma incrementação é confundir os sinais '+=' é o errado. Faça '=+'

9- Os eventos no js são comulativos, ou seja se eu tenho um evento dentro da uma função e chamalas 3 vezes e depois eu chamar o evento, ele vai ser chamado tres vezes por ser cumulativo. Mas há uma maneira de fazer com que um evento seja excuta somente uma vez estando dentro de uma função. Ex: 

equal.addEventListener('click', function() {
    finalResult(displayInput);
}, { once: true });

10 - Se eu quiser verificar um paramtro basta juntar include com o array:

const padaria = ['pao', 'macarrao', 'arroz'].

padaria.include('pao') //true.

É diferente, para verificar se o array tem múltiplos elementos, tem que iterar cada elemento do array: 

    const padaria = ['pao', 'macarrao', 'arroz'];
    const verificar = ['pao', 'macarrao'];

    const itemItens = verificar.some(item => padaria(item));
    console.log(temItens);  // true

O some() ele vai verificar se pelos menos existe um elemento que da "match" com verificar.

Já o every() ele verifica se todos batem com verificar

    const padaria = ['pao', 'macarrao', 'arroz'];
    const verificar = ['pao', 'macarrao'];

    const itemItens = verificar.every(item => padaria(item));
    console.log(temItens);  // true.

11 - 

    